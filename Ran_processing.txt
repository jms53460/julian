#Process Ran's data

mkdir /scratch/jms53460/Ran
cd /scratch/jms53460/Ran
mkdir Raw_Data
cp /work/bnlab/August_5_2025_Sequencing/24323-06-08112025_145532/Ran* Raw_Data
cp /work/bnlab/Aug_27_2025_Seq/24323-09-09062025_153845/Ran* Raw_Data


#!/bin/bash
#SBATCH --job-name=merge_files
#SBATCH --partition=batch                           # Partition (queue) name, i.e., highmem_p
#SBATCH --ntasks=1                                  # Run a single task
#SBATCH --cpus-per-task=8                           # Number of CPU cores per task
#SBATCH --mem=100gb                                 # Job memory request
#SBATCH --time=1:00:00                             # Time limit hrs:min:sec
#SBATCH --output=/scratch/jms53460/Ran/merge.out
#SBATCH --error=/scratch/jms53460/Ran/merge.err
#SBATCH --mail-type=END,FAIL                        # Mail events (NONE, BEGIN, END, FAIL, ALL)
#SBATCH --mail-user=jms53460@uga.edu                # Where to send mail
#SBATCH --export=NONE                               # do not load any env variables to compute node

cd /scratch/jms53460/Ran
mkdir Raw_Data_merged
for file in "Raw_Data/"*L004_R1_001.fastq.gz
do
    file2="${file:9:-25}"

cat Raw_Data/"$file2"*L004_R1_001.fastq.gz Raw_Data/"$file2"*L008_R1_001.fastq.gz > Raw_Data_merged/"$file2"R1.fastq.gz
cat Raw_Data/"$file2"*L004_R2_001.fastq.gz Raw_Data/"$file2"*L008_R2_001.fastq.gz > Raw_Data_merged/"$file2"R2.fastq.gz

done



#!/bin/bash
#SBATCH --job-name=Dm                                                     # Job name
#SBATCH --partition=batch                                                 # Partition (queue) name
#SBATCH --ntasks=1                                                        # Single task job
#SBATCH --cpus-per-task=6                                                 # Number of cores per task
#SBATCH --mem=100gb                                                        # Total memory for job
#SBATCH --time=24:00:00                                                   # Time limit hrs:min:sec
#SBATCH --output=/scratch/jms53460/Ran/Dm.out                     # Location of standard output file
#SBATCH --error=/scratch/jms53460/Ran/Dm.err                      # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                                      # Where to send mail
#SBATCH --mail-type=END,FAIL                                              # Mail events (BEGIN, END, FAIL, ALL)

cd /scratch/jms53460/Ran/
mkdir Demultiplexed
ml Mamba/23.11.0-0
source activate /home/jms53460/Fastq-Multx

module load fastp/0.23.4-GCC-13.2.0
for file in Raw_Data_merged/*_R1.fastq.gz; do
    file2="${file:16:-12}"

    if [ ! -f "Demultiplexed/""$file2""_1s.fastq.gz" ]; then
	    #Move UMI to header
        fastp -w 6 -i "$file" -I "Raw_Data_merged/""$file2""_R2.fastq.gz" -o "Demultiplexed/umi_""$file2""_R1.fastq.gz" -O "Demultiplexed/umi_""$file2""_R2.fastq.gz" -A -Q -L -G --umi --umi_loc read2 --umi_len 10 --umi_prefix UMI
        
        #Split read 2 file by CELseq barcodes. Require perfect match to barcode in expected location
	    fastq-multx -b -B "CELSeq_barcodes.txt" -m 0 "Demultiplexed/umi_""$file2""_R2.fastq.gz" "Demultiplexed/umi_""$file2""_R1.fastq.gz" "Raw_Data_merged/""$file2""_R2.fastq.gz" -o "Demultiplexed/""$file2""_%_R2.fastq.gz" "Demultiplexed/""$file2""_%.fastq.gz" "Demultiplexed/""$file2""_%_umi.fastq.gz"

    fi
done
conda deactivate

mkdir SRA_upload
module load fastp/0.23.4-GCC-13.2.0

for file in Demultiplexed/*s.fastq.gz; do
	file2="${file:14:-9}"

    #Trim UMI containing read to only contain the UMI
    fastp -w 6 -B 10 -i "Demultiplexed/""$file2"".fastq.gz" -I "Demultiplexed/""$file2""_umi.fastq.gz" -o "SRA_upload/""$file2"".fastq.gz" -O "SRA_upload/""$file2""_umi.fastq.gz" -A -Q -L -G
done


cp /scratch/jms53460/Ran/SRA_upload/*_1s.fastq.gz /project/bnlab/Ran_data/


mkdir /scratch/jms53460/Ran/Mapped
#Got the mapped data from Xiaofeng and the gff from Xiaofeng through Globus. Downloaded all the files and then moved them to /scratch/jms53460/Ran/Mapped with FileZilla

cd /scratch/jms53460/Ran
mv Mapped/JEC21_56.gff .

#!/bin/bash
#SBATCH --job-name=Ran_features_UMIs                                     # Job name
#SBATCH --partition=batch                                                 # Partition (queue) name
#SBATCH --ntasks=1                                                        # Single task job
#SBATCH --cpus-per-task=6                                                 # Number of cores per task
#SBATCH --mem=300gb                                                       # Total memory for job
#SBATCH --time=48:00:00                                                   # Time limit hrs:min:sec
#SBATCH --output=/scratch/jms53460/Ran/Ran_features_UMIs.out              # Location of standard output file
#SBATCH --error=/scratch/jms53460/Ran/Ran_features_UMIs.err               # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                                      # Where to send mail
#SBATCH --mail-type=END,FAIL                                              # Mail events (BEGIN, END, FAIL, ALL)

cd /scratch/jms53460/Ran

mkdir featurecounts
mkdir bams
mkdir UMIcounts
ml Mamba/23.11.0-0
source activate /home/jms53460/subread-env

featureCounts -T 6 -s 1 -a JEC21_56.gff -t 'protein_coding_gene' -g 'ID' -o featurecounts/read_counts.tab --readExtension5 500 -R BAM Mapped/*.bam

conda deactivate

ml SAMtools/1.21-GCC-13.3.0
for file in "featurecounts/"*.bam
do
    file2="${file:14:-22}"

        samtools sort -@ 6 "$file" -o "bams/$file2"
        samtools index "bams/$file2"
done


module load UMI-tools/1.1.4-foss-2023a
for file in "featurecounts/"*.bam
do
    file2="${file:14:-22}"

        umi_tools count --per-gene --gene-tag=XT --assigned-status-tag=XS -I "bams/$file2" -S "UMIcounts/${file2}.tsv"
done



#!/bin/bash
#SBATCH --job-name=Ran_features_rev                                       # Job name
#SBATCH --partition=batch                                                 # Partition (queue) name
#SBATCH --ntasks=1                                                        # Single task job
#SBATCH --cpus-per-task=6                                                 # Number of cores per task
#SBATCH --mem=300gb                                                       # Total memory for job
#SBATCH --time=12:00:00                                                   # Time limit hrs:min:sec
#SBATCH --output=/scratch/jms53460/Ran/Ran_features_rev.out               # Location of standard output file
#SBATCH --error=/scratch/jms53460/Ran/Ran_features_rev.err                # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                                      # Where to send mail
#SBATCH --mail-type=END,FAIL                                              # Mail events (BEGIN, END, FAIL, ALL)

cd /scratch/jms53460/Ran
mkdir featurecounts_rev

ml Mamba/23.11.0-0
source activate /home/jms53460/subread-env

featureCounts -T 6 -s 2 -a JEC21_56.gff -t 'protein_coding_gene' -g 'ID' -o featurecounts_rev/read_counts.tab --readExtension5 500 -R BAM Mapped/*2*.bam

conda deactivate


ml R/4.4.2-gfbf-2024a
R
genes = read.table('JEC21_56.gff', sep = '\t', quote = "")[,c(1,3,5,9)]
annots = strsplit(genes[,4], ';')
annots = unlist(lapply(annots, function(xx) { xx[1] }))
annots = sub('ID=', '', annots)
rownames(genes) = annots
genes[,4] = annots
genes = genes[grep('protein_coding_gene', genes[,2]),]
genes = genes[,c(1,3,4)]
colnames(genes) = c('Chr', 'Position', 'Gene')


files = dir('UMIcounts3')
A = matrix(NA, nrow = length(rownames(genes)), ncol = length(files))
rownames(A) = rownames(genes)
colnames(A) = files
for (f in files) {
	xx = read.table(paste('UMIcounts3/', f, sep = ''), sep = '\t', quote="", header=T, row.names=1)
	A[,f] = xx[match(rownames(genes),rownames(xx)),1]
}
colnames(A) = sub('.tsv', '', colnames(A))
A[is.na(A)] = 0

B = A[order(rownames(A)),]
B2 = B
B = B[!duplicated(rownames(B)),]
for (g in unique(rownames(B)[duplicated(rownames(B))])) {
	B[g,] = colSums(B2[rownames(B2) %in% g,])
}

genes = genes[order(genes[,2]),] #order by position
genes = genes[order(genes[,1]),] #order by chr

UMIs = B[rownames(genes),]

reads = read.table('featurecounts/read_counts.tab', sep = '\t', quote = "", header=T, row.names=1)[,6:24]
colnames(reads) = sub('Mapped.', 'Ran', sub('Aligned.sortedByCoord.out.bam', '', colnames(reads)))
reads = reads[rownames(UMIs),colnames(UMIs)]

save(UMIs,genes,reads, file = "Ran.RData")
q()


###Copying this to my local computer
scp sapelo2:/scratch/jms53460/Ran/Ran.RData 'C:/Users/julia/OneDrive/Desktop/Grad School/Nelms lab/Bioinformatics/R'

###In local R terminal
setwd('C:/Users/julia/OneDrive/Desktop/Grad School/Nelms lab/Bioinformatics/R')
load('Ran.RData')

