###Install fastq-multx
ml Miniconda3/23.5.2-0
conda create -p /home/jms53460/Fastq-Multx -c bioconda fastq-multx #when prompted, say 'y'
source activate /home/jms53460/Fastq-Multx/
fastq-multx
conda deactivate


###Demultiplex the raw data

#!/bin/bash
#SBATCH --job-name=Ns_demultiplex                       # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=2:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_dm.out      # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_dm.err       # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
ml Miniconda3/23.5.2-0
source activate /home/jms53460/Fastq-Multx/

for file in Raw_Data/*_R1_*.gz; do
    filename=$(basename "$file")
    file2=$(echo "$filename" | sed 's/_R1.*//' | sed 's/_R2_001.fastq.gz//')

    if [ ! -f "Mapped_Data/demultiplexed/""$file2""_dT-1s.fastq.gz" ]; then
        module load fastp/0.23.2-GCC-11.3.0
	    fastp -w 6 -i "$file" -I "Raw_Data/""$file2""_R2_001.fastq.gz" -o "Mapped_Data/demultiplexed/umi_""$file2""_R1.fastq.gz" -O "Mapped_Data/demultiplexed/umi_""$file2""_R2.fastq.gz" -A -Q -L -G --umi --umi_loc read2 --umi_len 10 --umi_prefix UMI

	    fastq-multx -b -B "CELSeq_barcodes.txt" -m 0 "Mapped_Data/demultiplexed/umi_""$file2""_R2.fastq.gz" "Mapped_Data/demultiplexed/umi_""$file2""_R1.fastq.gz" -o "Mapped_Data/demultiplexed/""$file2""_%_R2.fastq.gz" "Mapped_Data/demultiplexed/""$file2""_%.fastq.gz"  # Split read 2 file by CELseq barcodes. Require perfect match to barcode in expected location

	    find "Mapped_Data/demultiplexed/" -name "umi_*" -delete
	    find "Mapped_Data/demultiplexed/" -name "*_R2*" -delete
    fi
done
conda deactivate


###Downloaded current Nicotiana sylvestris genome from NCBI and used FileZilla to transfer to the cluster


#Make hisat2 index (hisat2-build), filter (fastp), map to genome (hisat2), .bam output (samtools view), sort (samtools sort)

#!/bin/bash
#SBATCH --job-name=Ns_fastp_hisat2                      # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_fh2.out              # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_fh2.err               # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
ml HISAT2/3n-20201216-gompi-2022a
hisat2-build Ns_genome.fna Ns_hisat2_index
mkdir hisat2_out

for file in "Mapped_Data/demultiplexed/"*.fastq*
do
	file2="${file:26:-9}"

if [ ! -f "hisat2_out/""$file2"".bam" ]; then

	module load fastp/0.23.2-GCC-11.3.0
	fastp -w 6 -i "$file" -o "hisat2_out/""$file2"".fastq.gz" -y -x -3 -a AAAAAAAAAAAA

	module load SAMtools/1.16.1-GCC-11.3.0
	hisat2 -p 6 --dta -x /home/jms53460/Ns_hisat2_index -U "hisat2_out/""$file2"".fastq.gz" | samtools view -bS -> "hisat2_out/""$file2""_unsorted.bam"
	samtools sort -@ 6 "hisat2_out/""$file2""_unsorted.bam" -o "hisat2_out/""$file2""_s.bam"
	
fi
done


###Assemble transcripts with stringtie

#!/bin/bash
#SBATCH --job-name=Ns_stringtie                         # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_stringtie.out        # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_stringtie.err         # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
for file in "hisat2_out/"*_s.bam
do
	ml StringTie/2.2.1-GCC-11.3.0
	stringtie -p 6 --rf -o "stringtie_out2/""${file:11:-4}"".gtf" "$file"
done

# Merge StringTie transcripts
ls -1 "stringtie_out2/"*.gtf | gawk '{print $0}' > mergelist.txt

# Merge GTF files
stringtie --merge -p 6 -o "stringtie_out2/stringtie_merged.gtf" mergelist.txt
rm mergelist.txt




###Making a merged bam file

###R code to make a list of hisat2_out/*fastq.gz files
ml R/4.3.2-foss-2022b
R
directory1 = 'hisat2_out'
f = dir(directory1)
runs = unique(f[grepl('fastq.gz', f)])
out = NULL
out = c(out, '', paste(c('hisat2 -p 6 --dta -x /home/jms53460/Ns_hisat2_index -U ', paste(paste(directory1, '/', runs, sep = ''), collapse=','), ' | samtools view -bS -> hisat2_out/merged_unsorted.bam'), collapse = ''))
write.csv(out, row.names=F, quote = F, file = 'generated_code.txt')
q()
head generated_code.txt

#Copied and pasted the code generated in R in the bash script below

#!/bin/bash
#SBATCH --job-name=Ns_hisat2_merge                      # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                  # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_h2m.out              # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_h2m.err               # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
ml HISAT2/3n-20201216-gompi-2022a
module load SAMtools/1.16.1-GCC-11.3.0
hisat2 -p 6 --dta -x /home/jms53460/Ns_hisat2_index -U hisat2_out/Brad_T1_S11_L004_10s.fastq.gz,hisat2_out/Brad_T1_S11_L004_11s.fastq.gz,hisat2_out/Brad_T1_S11_L004_12s.fastq.gz,hisat2_out/Brad_T1_S11_L004_13s.fastq.gz,hisat2_out/Brad_T1_S11_L004_14s.fastq.gz,hisat2_out/Brad_T1_S11_L004_15s.fastq.gz,hisat2_out/Brad_T1_S11_L004_16s.fastq.gz,hisat2_out/Brad_T1_S11_L004_17s.fastq.gz,hisat2_out/Brad_T1_S11_L004_18s.fastq.gz,hisat2_out/Brad_T1_S11_L004_19s.fastq.gz,hisat2_out/Brad_T1_S11_L004_1s.fastq.gz,hisat2_out/Brad_T1_S11_L004_20s.fastq.gz,hisat2_out/Brad_T1_S11_L004_21s.fastq.gz,hisat2_out/Brad_T1_S11_L004_22s.fastq.gz,hisat2_out/Brad_T1_S11_L004_23s.fastq.gz,hisat2_out/Brad_T1_S11_L004_24s.fastq.gz,hisat2_out/Brad_T1_S11_L004_25s.fastq.gz,hisat2_out/Brad_T1_S11_L004_26s.fastq.gz,hisat2_out/Brad_T1_S11_L004_27s.fastq.gz,hisat2_out/Brad_T1_S11_L004_28s.fastq.gz,hisat2_out/Brad_T1_S11_L004_29s.fastq.gz,hisat2_out/Brad_T1_S11_L004_2s.fastq.gz,hisat2_out/Brad_T1_S11_L004_30s.fastq.gz,hisat2_out/Brad_T1_S11_L004_31s.fastq.gz,hisat2_out/Brad_T1_S11_L004_32s.fastq.gz,hisat2_out/Brad_T1_S11_L004_33s.fastq.gz,hisat2_out/Brad_T1_S11_L004_34s.fastq.gz,hisat2_out/Brad_T1_S11_L004_35s.fastq.gz,hisat2_out/Brad_T1_S11_L004_36s.fastq.gz,hisat2_out/Brad_T1_S11_L004_37s.fastq.gz,hisat2_out/Brad_T1_S11_L004_38s.fastq.gz,hisat2_out/Brad_T1_S11_L004_39s.fastq.gz,hisat2_out/Brad_T1_S11_L004_3s.fastq.gz,hisat2_out/Brad_T1_S11_L004_40s.fastq.gz,hisat2_out/Brad_T1_S11_L004_41s.fastq.gz,hisat2_out/Brad_T1_S11_L004_42s.fastq.gz,hisat2_out/Brad_T1_S11_L004_43s.fastq.gz,hisat2_out/Brad_T1_S11_L004_44s.fastq.gz,hisat2_out/Brad_T1_S11_L004_45s.fastq.gz,hisat2_out/Brad_T1_S11_L004_46s.fastq.gz,hisat2_out/Brad_T1_S11_L004_47s.fastq.gz,hisat2_out/Brad_T1_S11_L004_48s.fastq.gz,hisat2_out/Brad_T1_S11_L004_49s.fastq.gz,hisat2_out/Brad_T1_S11_L004_4s.fastq.gz,hisat2_out/Brad_T1_S11_L004_50s.fastq.gz,hisat2_out/Brad_T1_S11_L004_51s.fastq.gz,hisat2_out/Brad_T1_S11_L004_52s.fastq.gz,hisat2_out/Brad_T1_S11_L004_53s.fastq.gz,hisat2_out/Brad_T1_S11_L004_54s.fastq.gz,hisat2_out/Brad_T1_S11_L004_55s.fastq.gz,hisat2_out/Brad_T1_S11_L004_56s.fastq.gz,hisat2_out/Brad_T1_S11_L004_57s.fastq.gz,hisat2_out/Brad_T1_S11_L004_58s.fastq.gz,hisat2_out/Brad_T1_S11_L004_59s.fastq.gz,hisat2_out/Brad_T1_S11_L004_5s.fastq.gz,hisat2_out/Brad_T1_S11_L004_60s.fastq.gz,hisat2_out/Brad_T1_S11_L004_61s.fastq.gz,hisat2_out/Brad_T1_S11_L004_62s.fastq.gz,hisat2_out/Brad_T1_S11_L004_63s.fastq.gz,hisat2_out/Brad_T1_S11_L004_64s.fastq.gz,hisat2_out/Brad_T1_S11_L004_65s.fastq.gz,hisat2_out/Brad_T1_S11_L004_66s.fastq.gz,hisat2_out/Brad_T1_S11_L004_67s.fastq.gz,hisat2_out/Brad_T1_S11_L004_68s.fastq.gz,hisat2_out/Brad_T1_S11_L004_69s.fastq.gz,hisat2_out/Brad_T1_S11_L004_6s.fastq.gz,hisat2_out/Brad_T1_S11_L004_70s.fastq.gz,hisat2_out/Brad_T1_S11_L004_71s.fastq.gz,hisat2_out/Brad_T1_S11_L004_72s.fastq.gz,hisat2_out/Brad_T1_S11_L004_73s.fastq.gz,hisat2_out/Brad_T1_S11_L004_74s.fastq.gz,hisat2_out/Brad_T1_S11_L004_75s.fastq.gz,hisat2_out/Brad_T1_S11_L004_76s.fastq.gz,hisat2_out/Brad_T1_S11_L004_77s.fastq.gz,hisat2_out/Brad_T1_S11_L004_78s.fastq.gz,hisat2_out/Brad_T1_S11_L004_79s.fastq.gz,hisat2_out/Brad_T1_S11_L004_7s.fastq.gz,hisat2_out/Brad_T1_S11_L004_80s.fastq.gz,hisat2_out/Brad_T1_S11_L004_81s.fastq.gz,hisat2_out/Brad_T1_S11_L004_82s.fastq.gz,hisat2_out/Brad_T1_S11_L004_83s.fastq.gz,hisat2_out/Brad_T1_S11_L004_84s.fastq.gz,hisat2_out/Brad_T1_S11_L004_85s.fastq.gz,hisat2_out/Brad_T1_S11_L004_86s.fastq.gz,hisat2_out/Brad_T1_S11_L004_87s.fastq.gz,hisat2_out/Brad_T1_S11_L004_88s.fastq.gz,hisat2_out/Brad_T1_S11_L004_89s.fastq.gz,hisat2_out/Brad_T1_S11_L004_8s.fastq.gz,hisat2_out/Brad_T1_S11_L004_90s.fastq.gz,hisat2_out/Brad_T1_S11_L004_91s.fastq.gz,hisat2_out/Brad_T1_S11_L004_92s.fastq.gz,hisat2_out/Brad_T1_S11_L004_93s.fastq.gz,hisat2_out/Brad_T1_S11_L004_94s.fastq.gz,hisat2_out/Brad_T1_S11_L004_95s.fastq.gz,hisat2_out/Brad_T1_S11_L004_96s.fastq.gz,hisat2_out/Brad_T1_S11_L004_9s.fastq.gz,hisat2_out/Brad_T1_S11_L004_unmatched.fastq.gz,hisat2_out/Brad_T2_S12_L004_10s.fastq.gz,hisat2_out/Brad_T2_S12_L004_11s.fastq.gz,hisat2_out/Brad_T2_S12_L004_12s.fastq.gz,hisat2_out/Brad_T2_S12_L004_13s.fastq.gz,hisat2_out/Brad_T2_S12_L004_14s.fastq.gz,hisat2_out/Brad_T2_S12_L004_15s.fastq.gz,hisat2_out/Brad_T2_S12_L004_16s.fastq.gz,hisat2_out/Brad_T2_S12_L004_17s.fastq.gz,hisat2_out/Brad_T2_S12_L004_18s.fastq.gz,hisat2_out/Brad_T2_S12_L004_19s.fastq.gz,hisat2_out/Brad_T2_S12_L004_1s.fastq.gz,hisat2_out/Brad_T2_S12_L004_20s.fastq.gz,hisat2_out/Brad_T2_S12_L004_21s.fastq.gz,hisat2_out/Brad_T2_S12_L004_22s.fastq.gz,hisat2_out/Brad_T2_S12_L004_23s.fastq.gz,hisat2_out/Brad_T2_S12_L004_24s.fastq.gz,hisat2_out/Brad_T2_S12_L004_25s.fastq.gz,hisat2_out/Brad_T2_S12_L004_26s.fastq.gz,hisat2_out/Brad_T2_S12_L004_27s.fastq.gz,hisat2_out/Brad_T2_S12_L004_28s.fastq.gz,hisat2_out/Brad_T2_S12_L004_29s.fastq.gz,hisat2_out/Brad_T2_S12_L004_2s.fastq.gz,hisat2_out/Brad_T2_S12_L004_30s.fastq.gz,hisat2_out/Brad_T2_S12_L004_31s.fastq.gz,hisat2_out/Brad_T2_S12_L004_32s.fastq.gz,hisat2_out/Brad_T2_S12_L004_33s.fastq.gz,hisat2_out/Brad_T2_S12_L004_34s.fastq.gz,hisat2_out/Brad_T2_S12_L004_35s.fastq.gz,hisat2_out/Brad_T2_S12_L004_36s.fastq.gz,hisat2_out/Brad_T2_S12_L004_37s.fastq.gz,hisat2_out/Brad_T2_S12_L004_38s.fastq.gz,hisat2_out/Brad_T2_S12_L004_39s.fastq.gz,hisat2_out/Brad_T2_S12_L004_3s.fastq.gz,hisat2_out/Brad_T2_S12_L004_40s.fastq.gz,hisat2_out/Brad_T2_S12_L004_41s.fastq.gz,hisat2_out/Brad_T2_S12_L004_42s.fastq.gz,hisat2_out/Brad_T2_S12_L004_43s.fastq.gz,hisat2_out/Brad_T2_S12_L004_44s.fastq.gz,hisat2_out/Brad_T2_S12_L004_45s.fastq.gz,hisat2_out/Brad_T2_S12_L004_46s.fastq.gz,hisat2_out/Brad_T2_S12_L004_47s.fastq.gz,hisat2_out/Brad_T2_S12_L004_48s.fastq.gz,hisat2_out/Brad_T2_S12_L004_49s.fastq.gz,hisat2_out/Brad_T2_S12_L004_4s.fastq.gz,hisat2_out/Brad_T2_S12_L004_50s.fastq.gz,hisat2_out/Brad_T2_S12_L004_51s.fastq.gz,hisat2_out/Brad_T2_S12_L004_52s.fastq.gz,hisat2_out/Brad_T2_S12_L004_53s.fastq.gz,hisat2_out/Brad_T2_S12_L004_54s.fastq.gz,hisat2_out/Brad_T2_S12_L004_55s.fastq.gz,hisat2_out/Brad_T2_S12_L004_56s.fastq.gz,hisat2_out/Brad_T2_S12_L004_57s.fastq.gz,hisat2_out/Brad_T2_S12_L004_58s.fastq.gz,hisat2_out/Brad_T2_S12_L004_59s.fastq.gz,hisat2_out/Brad_T2_S12_L004_5s.fastq.gz,hisat2_out/Brad_T2_S12_L004_60s.fastq.gz,hisat2_out/Brad_T2_S12_L004_61s.fastq.gz,hisat2_out/Brad_T2_S12_L004_62s.fastq.gz,hisat2_out/Brad_T2_S12_L004_63s.fastq.gz,hisat2_out/Brad_T2_S12_L004_64s.fastq.gz,hisat2_out/Brad_T2_S12_L004_65s.fastq.gz,hisat2_out/Brad_T2_S12_L004_66s.fastq.gz,hisat2_out/Brad_T2_S12_L004_67s.fastq.gz,hisat2_out/Brad_T2_S12_L004_68s.fastq.gz,hisat2_out/Brad_T2_S12_L004_69s.fastq.gz,hisat2_out/Brad_T2_S12_L004_6s.fastq.gz,hisat2_out/Brad_T2_S12_L004_70s.fastq.gz,hisat2_out/Brad_T2_S12_L004_71s.fastq.gz,hisat2_out/Brad_T2_S12_L004_72s.fastq.gz,hisat2_out/Brad_T2_S12_L004_73s.fastq.gz,hisat2_out/Brad_T2_S12_L004_74s.fastq.gz,hisat2_out/Brad_T2_S12_L004_75s.fastq.gz,hisat2_out/Brad_T2_S12_L004_76s.fastq.gz,hisat2_out/Brad_T2_S12_L004_77s.fastq.gz,hisat2_out/Brad_T2_S12_L004_78s.fastq.gz,hisat2_out/Brad_T2_S12_L004_79s.fastq.gz,hisat2_out/Brad_T2_S12_L004_7s.fastq.gz,hisat2_out/Brad_T2_S12_L004_80s.fastq.gz,hisat2_out/Brad_T2_S12_L004_81s.fastq.gz,hisat2_out/Brad_T2_S12_L004_82s.fastq.gz,hisat2_out/Brad_T2_S12_L004_83s.fastq.gz,hisat2_out/Brad_T2_S12_L004_84s.fastq.gz,hisat2_out/Brad_T2_S12_L004_85s.fastq.gz,hisat2_out/Brad_T2_S12_L004_86s.fastq.gz,hisat2_out/Brad_T2_S12_L004_87s.fastq.gz,hisat2_out/Brad_T2_S12_L004_88s.fastq.gz,hisat2_out/Brad_T2_S12_L004_89s.fastq.gz,hisat2_out/Brad_T2_S12_L004_8s.fastq.gz,hisat2_out/Brad_T2_S12_L004_90s.fastq.gz,hisat2_out/Brad_T2_S12_L004_91s.fastq.gz,hisat2_out/Brad_T2_S12_L004_92s.fastq.gz,hisat2_out/Brad_T2_S12_L004_93s.fastq.gz,hisat2_out/Brad_T2_S12_L004_94s.fastq.gz,hisat2_out/Brad_T2_S12_L004_95s.fastq.gz,hisat2_out/Brad_T2_S12_L004_96s.fastq.gz,hisat2_out/Brad_T2_S12_L004_9s.fastq.gz,hisat2_out/Brad_T2_S12_L004_unmatched.fastq.gz,hisat2_out/Brad_T3_S13_L004_10s.fastq.gz,hisat2_out/Brad_T3_S13_L004_11s.fastq.gz,hisat2_out/Brad_T3_S13_L004_12s.fastq.gz,hisat2_out/Brad_T3_S13_L004_13s.fastq.gz,hisat2_out/Brad_T3_S13_L004_14s.fastq.gz,hisat2_out/Brad_T3_S13_L004_15s.fastq.gz,hisat2_out/Brad_T3_S13_L004_16s.fastq.gz,hisat2_out/Brad_T3_S13_L004_17s.fastq.gz,hisat2_out/Brad_T3_S13_L004_18s.fastq.gz,hisat2_out/Brad_T3_S13_L004_19s.fastq.gz,hisat2_out/Brad_T3_S13_L004_1s.fastq.gz,hisat2_out/Brad_T3_S13_L004_20s.fastq.gz,hisat2_out/Brad_T3_S13_L004_21s.fastq.gz,hisat2_out/Brad_T3_S13_L004_22s.fastq.gz,hisat2_out/Brad_T3_S13_L004_23s.fastq.gz,hisat2_out/Brad_T3_S13_L004_24s.fastq.gz,hisat2_out/Brad_T3_S13_L004_25s.fastq.gz,hisat2_out/Brad_T3_S13_L004_26s.fastq.gz,hisat2_out/Brad_T3_S13_L004_27s.fastq.gz,hisat2_out/Brad_T3_S13_L004_28s.fastq.gz,hisat2_out/Brad_T3_S13_L004_29s.fastq.gz,hisat2_out/Brad_T3_S13_L004_2s.fastq.gz,hisat2_out/Brad_T3_S13_L004_30s.fastq.gz,hisat2_out/Brad_T3_S13_L004_31s.fastq.gz,hisat2_out/Brad_T3_S13_L004_32s.fastq.gz,hisat2_out/Brad_T3_S13_L004_33s.fastq.gz,hisat2_out/Brad_T3_S13_L004_34s.fastq.gz,hisat2_out/Brad_T3_S13_L004_35s.fastq.gz,hisat2_out/Brad_T3_S13_L004_36s.fastq.gz,hisat2_out/Brad_T3_S13_L004_37s.fastq.gz,hisat2_out/Brad_T3_S13_L004_38s.fastq.gz,hisat2_out/Brad_T3_S13_L004_39s.fastq.gz,hisat2_out/Brad_T3_S13_L004_3s.fastq.gz,hisat2_out/Brad_T3_S13_L004_40s.fastq.gz,hisat2_out/Brad_T3_S13_L004_41s.fastq.gz,hisat2_out/Brad_T3_S13_L004_42s.fastq.gz,hisat2_out/Brad_T3_S13_L004_43s.fastq.gz,hisat2_out/Brad_T3_S13_L004_44s.fastq.gz,hisat2_out/Brad_T3_S13_L004_45s.fastq.gz,hisat2_out/Brad_T3_S13_L004_46s.fastq.gz,hisat2_out/Brad_T3_S13_L004_47s.fastq.gz,hisat2_out/Brad_T3_S13_L004_48s.fastq.gz,hisat2_out/Brad_T3_S13_L004_49s.fastq.gz,hisat2_out/Brad_T3_S13_L004_4s.fastq.gz,hisat2_out/Brad_T3_S13_L004_50s.fastq.gz,hisat2_out/Brad_T3_S13_L004_51s.fastq.gz,hisat2_out/Brad_T3_S13_L004_52s.fastq.gz,hisat2_out/Brad_T3_S13_L004_53s.fastq.gz,hisat2_out/Brad_T3_S13_L004_54s.fastq.gz,hisat2_out/Brad_T3_S13_L004_55s.fastq.gz,hisat2_out/Brad_T3_S13_L004_56s.fastq.gz,hisat2_out/Brad_T3_S13_L004_57s.fastq.gz,hisat2_out/Brad_T3_S13_L004_58s.fastq.gz,hisat2_out/Brad_T3_S13_L004_59s.fastq.gz,hisat2_out/Brad_T3_S13_L004_5s.fastq.gz,hisat2_out/Brad_T3_S13_L004_60s.fastq.gz,hisat2_out/Brad_T3_S13_L004_61s.fastq.gz,hisat2_out/Brad_T3_S13_L004_62s.fastq.gz,hisat2_out/Brad_T3_S13_L004_63s.fastq.gz,hisat2_out/Brad_T3_S13_L004_64s.fastq.gz,hisat2_out/Brad_T3_S13_L004_65s.fastq.gz,hisat2_out/Brad_T3_S13_L004_66s.fastq.gz,hisat2_out/Brad_T3_S13_L004_67s.fastq.gz,hisat2_out/Brad_T3_S13_L004_68s.fastq.gz,hisat2_out/Brad_T3_S13_L004_69s.fastq.gz,hisat2_out/Brad_T3_S13_L004_6s.fastq.gz,hisat2_out/Brad_T3_S13_L004_70s.fastq.gz,hisat2_out/Brad_T3_S13_L004_71s.fastq.gz,hisat2_out/Brad_T3_S13_L004_72s.fastq.gz,hisat2_out/Brad_T3_S13_L004_73s.fastq.gz,hisat2_out/Brad_T3_S13_L004_74s.fastq.gz,hisat2_out/Brad_T3_S13_L004_75s.fastq.gz,hisat2_out/Brad_T3_S13_L004_76s.fastq.gz,hisat2_out/Brad_T3_S13_L004_77s.fastq.gz,hisat2_out/Brad_T3_S13_L004_78s.fastq.gz,hisat2_out/Brad_T3_S13_L004_79s.fastq.gz,hisat2_out/Brad_T3_S13_L004_7s.fastq.gz,hisat2_out/Brad_T3_S13_L004_80s.fastq.gz,hisat2_out/Brad_T3_S13_L004_81s.fastq.gz,hisat2_out/Brad_T3_S13_L004_82s.fastq.gz,hisat2_out/Brad_T3_S13_L004_83s.fastq.gz,hisat2_out/Brad_T3_S13_L004_84s.fastq.gz,hisat2_out/Brad_T3_S13_L004_85s.fastq.gz,hisat2_out/Brad_T3_S13_L004_86s.fastq.gz,hisat2_out/Brad_T3_S13_L004_87s.fastq.gz,hisat2_out/Brad_T3_S13_L004_88s.fastq.gz,hisat2_out/Brad_T3_S13_L004_89s.fastq.gz,hisat2_out/Brad_T3_S13_L004_8s.fastq.gz,hisat2_out/Brad_T3_S13_L004_90s.fastq.gz,hisat2_out/Brad_T3_S13_L004_91s.fastq.gz,hisat2_out/Brad_T3_S13_L004_92s.fastq.gz,hisat2_out/Brad_T3_S13_L004_93s.fastq.gz,hisat2_out/Brad_T3_S13_L004_94s.fastq.gz,hisat2_out/Brad_T3_S13_L004_95s.fastq.gz,hisat2_out/Brad_T3_S13_L004_96s.fastq.gz,hisat2_out/Brad_T3_S13_L004_9s.fastq.gz,hisat2_out/Brad_T3_S13_L004_unmatched.fastq.gz | samtools view -bS -> hisat2_out/merged_unsorted.bam
samtools sort -@ 6 "hisat2_out/""merged_unsorted.bam" -o "hisat2_out/""merged_s.bam"


###Make vcf file

#!/bin/bash
#SBATCH --job-name=Ns_vcf                           # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_vcf.out          # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_vcf.err           # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
module load SAMtools/1.16.1-GCC-11.3.0
samtools index -@ 6 hisat2_out/merged_s.bam

module load BCFtools/1.15.1-GCC-11.3.0
bcftools mpileup -Ou --threads 6 --min-MQ 60 -f Ns_genome.fna hisat2_out/merged_s.bam | bcftools call -Ou -m -v --threads 6 | bcftools filter -Oz -e 'QUAL<40 || DP<10' > Ns.vcf.gz
bcftools index Ns.vcf.gz


###Install SNPsplit
cd /home/jms53460
ml Miniconda3/23.5.2-0
ml SAMtools/1.16.1-GCC-11.3.0
conda create -p /home/jms53460/snpsplit -c bioconda snpsplit -y
source activate /home/jms53460/snpsplit
SNPsplit_genome_preparation --help
SNPsplit_genome_preparation --vcf_file Ns.vcf.gz --reference_genome Ns_genome.fna_dir --list_strains
#Available genome according to SNPsplit_genome_preparation is named 'merged_s.bam'
SNPsplit --help
conda deactivate


###Reconfiguring things to try and get SNPsplit_genome_preparation to work
mkdir Ns_genome.fna_dir
cp Ns_genome.fna Ns_genome.fna_dir
cp hisat2_out/merged_s.bam /home/jms53460


###Rerunning Ns_vcf with moved merged sorted bam file

#!/bin/bash
#SBATCH --job-name=Ns_vcf2                              # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_vcf2.out             # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_vcf2.err              # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
module load SAMtools/1.16.1-GCC-11.3.0
samtools index -@ 6 merged_s.bam

module load BCFtools/1.15.1-GCC-11.3.0
bcftools mpileup -Ou --threads 6 --min-MQ 60 -f Ns_genome.fna merged_s.bam | bcftools call -Ou -m -v --threads 6 | bcftools filter -Oz -e 'QUAL<40 || DP<10' > Ns.vcf.gz
bcftools index Ns.vcf.gz



###Trying SNPsplit_genome_preparation

#!/bin/bash
#SBATCH --job-name=Ns_SNPsplit_genome_prep                         # Job name
#SBATCH --partition=batch                                          # Partition (queue) name
#SBATCH --ntasks=1                                                 # Single task job
#SBATCH --cpus-per-task=6                                          # Number of cores per task
#SBATCH --mem=50gb                                                 # Total memory for job
#SBATCH --time=6:00:00                                             # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_SNPsplit_genome_prep.out        # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_SNPsplit_genome_prep.err         # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                               # Where to send mail
#SBATCH --mail-type=END,FAIL                                       # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
ml Miniconda3/23.5.2-0
ml SAMtools/1.16.1-GCC-11.3.0
source activate /home/jms53460/snpsplit
SNPsplit_genome_preparation --vcf_file Ns.vcf.gz --reference_genome Ns_genome.fna_dir --strain merged_s.bam
conda deactivate


###Here's what was used to make the vcf used for mouse with SNPsplit:
bcftools mpileup -f Mus_musculus.GRCm39.dna.toplevel.fa.gz -b samples -g 10 -a FORMAT/DP,FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/SP,INFO/AD -E -Q 0 -pm 3 -F 0.25 -d 500
bcftools mpileup -Ou --threads 6 --min-MQ 60 -f Ns_genome.fna merged_s.bam | bcftools call -Ou -m -v -f GQ,GP -p 0.99 --threads 6 | bcftools filter -Oz -e 'QUAL<40 || DP<10' > Ns.vcf.gz
call -mAv -f GQ,GP -p 0.99
norm --fasta-ref Mus_musculus.GRCm39.dna.toplevel.fa.gz -m +indels
view -i 'FORMAT/FI[*] = 1' mgp_REL2021_snps.vcf.gz

###Rerunning Ns_vcf with bcftools mpileup -a FORMAT/DP added in. Hopefully this will add the FORMAT=<ID=FI line I need.

#!/bin/bash
#SBATCH --job-name=Ns_vcf3                              # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_vcf3.out             # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_vcf3.err              # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
module load BCFtools/1.15.1-GCC-11.3.0
bcftools mpileup -Ou --threads 6 --min-MQ 60 -g 10 -a FORMAT/DP,FORMAT/AD,FORMAT/ADF,FORMAT/ADR,FORMAT/SP,INFO/AD -E -Q 0 -pm 3 -F 0.25 -d 500 -f Ns_genome.fna merged_s.bam | bcftools call -Ou -a GQ,GP -mAv -p 0.99 --threads 6 | bcftools norm -Ou --threads 6 -f Ns_genome.fna -m +indels | bcftools filter -Oz -e 'QUAL<40 || DP<10' --threads 6 > Ns.3_vcf.gz
bcftools view -Ou --threads 6 -i 'FORMAT/FI[*] = 1' Ns.3_vcf.gz | bcftools annotate -Ou --threads 6 -x INFO/VDB,INFO/SGB,INFO/RPBZ,INFO/MQBZ,INFO/MQBZ,INFO/MQSBZ,INFO/BQBZ,INFO/SCBZ,INFO/FS,INFO/MQOF,INFO/AC,INFO/AN,FORMAT/SP,FORMAT/ADF,FORMAT/ADR,FORMAT/GP | bcftools view --threads 6 -a -Oz -o Ns.4_vcf.gz
bcftools annotate -x INFO/MQ0F -Oz --threads 6-o Ns.4_vcf.gz Ns.3_vcf.gz
bcftools index Ns.4_vcf.gz



###SNPsplit_genome_preparation is not working, giving me an error message "Failed to extract FI index. I am afraid this will need some manual looking into... at /home/jms53460/snpsplit/bin/SNPsplit_genome_preparation line 1009, <IN> line 182."
###I'll instead try to make my own SNP file and N-masked genome

###Install vcf2tsvpy
ml Miniconda3/23.5.2-0
conda create -p /home/jms53460/vcf2tsvpy -c bioconda vcf2tsvpy -y
source activate /home/jms53460/vcf2tsvpy
vcf2tsvpy --help
conda deactivate


###Convert vcf to tsv

#!/bin/bash
#SBATCH --job-name=Ns_vcf2tsvpy                         # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=6:00:00                                  # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_vcf2tsvpy.out        # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_vcf2tsvpy.err         # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
ml Miniconda3/23.5.2-0
source activate /home/jms53460/vcf2tsvpy
vcf2tsvpy --input_vcf Ns.vcf.gz --out_tsv Ns.vcf_table.tsv 
conda deactivate


###Selected columns from the vcf_table
awk '{print $1,$2,$3,$4,$5,$16}' Ns.vcf_table.tsv OFS="\t" > Ns_variants.tsv
grep F Ns_variants.tsv > Ns_SNPs.tsv
awk '{print $6,$1,$2,$3,$4,$5}' Ns_SNPs.tsv OFS="\t" > Ns_SNPs_alt.tsv



###Install subread
ml purge_dups/1.2.5-foss-2021b
ml Miniconda3/23.5.2-0
conda create -p subread-env -y
source activate ./subread-env/
conda install -c bioconda subread -y
conda deactivate


###Run featureCounts

#!/bin/bash
#SBATCH --job-name=Ns_features                          # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_features.out         # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_features.err          # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
ml purge_dups/1.2.5-foss-2021b
ml Miniconda3/23.5.2-0
source activate /home/jms53460/./subread-env/

featureCounts -T 6 -s 1 -a "stringtie_out2/stringtie_merged.gtf" -o "stringtie_out2/read_counts.tab" --readExtension5 500 -R BAM "hisat2_out/"*.bam

conda deactivate


#### Count UMIs

#!/bin/bash
#SBATCH --job-name=Ns_UMIcount                          # Job name
#SBATCH --partition=batch                               # Partition (queue) name
#SBATCH --ntasks=1                                      # Single task job
#SBATCH --cpus-per-task=6                               # Number of cores per task
#SBATCH --mem=50gb                                      # Total memory for job
#SBATCH --time=12:00:00                                 # Time limit hrs:min:sec
#SBATCH --output=/home/jms53460/Ns_UMIcount.out         # Location of standard output file
#SBATCH --error=/home/jms53460/Ns_UMIcount.err          # Location of error log file
#SBATCH --mail-user=jms53460@uga.edu                    # Where to send mail
#SBATCH --mail-type=END,FAIL                            # Mail events (BEGIN, END, FAIL, ALL)

cd /home/jms53460
mkdir bams
mkdir UMIcounts

for file in "hisat2_out/"*_s.bam
do
    file2="${file:11:-6}"
    if [ ! -f "UMIcounts/${file2}.tsv" ]; then

        module load SAMtools/1.16.1-GCC-11.3.0
        samtools sort -@ 6 "$file" -o "bams/$file2"
        samtools index -@ 6 "bams/$file2"

        module load UMI-tools/1.1.2-foss-2022a-Python-3.10.4
        umi_tools count --per-gene --gene-tag=XT --assigned-status-tag=XS -I "bams/$file2" -S "UMIcounts/${file2}.tsv"
    fi
done
